//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoEtapa2.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HIGADDv1Entities4 : DbContext
    {
        public HIGADDv1Entities4()
            : base("name=HIGADDv1Entities4")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Asignaturas> Asignaturas { get; set; }
        public virtual DbSet<Carreras> Carreras { get; set; }
        public virtual DbSet<DCA> DCA { get; set; }
        public virtual DbSet<Departamentos> Departamentos { get; set; }
        public virtual DbSet<Dia> Dia { get; set; }
        public virtual DbSet<Documentos> Documentos { get; set; }
        public virtual DbSet<Facultad> Facultad { get; set; }
        public virtual DbSet<Grupo_Asig_C_A> Grupo_Asig_C_A { get; set; }
        public virtual DbSet<Grupos> Grupos { get; set; }
        public virtual DbSet<Horarios> Horarios { get; set; }
        public virtual DbSet<Horas> Horas { get; set; }
        public virtual DbSet<Laboratorios> Laboratorios { get; set; }
        public virtual DbSet<Literatura_Doc> Literatura_Doc { get; set; }
        public virtual DbSet<Notificaciones> Notificaciones { get; set; }
        public virtual DbSet<PC> PC { get; set; }
        public virtual DbSet<PDC> PDC { get; set; }
        public virtual DbSet<Plan_asignatura> Plan_asignatura { get; set; }
        public virtual DbSet<Plan_tematico> Plan_tematico { get; set; }
        public virtual DbSet<Prof_Asig> Prof_Asig { get; set; }
        public virtual DbSet<Profesor> Profesor { get; set; }
        public virtual DbSet<Semestre> Semestre { get; set; }
        public virtual DbSet<Turnos> Turnos { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
    
        public virtual ObjectResult<SP_BuscarProfe_Result> SP_BuscarProfe(string iDProfe)
        {
            var iDProfeParameter = iDProfe != null ?
                new ObjectParameter("IDProfe", iDProfe) :
                new ObjectParameter("IDProfe", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BuscarProfe_Result>("SP_BuscarProfe", iDProfeParameter);
        }
    
        public virtual ObjectResult<string> SP_EliminarProfe(string iDProfe)
        {
            var iDProfeParameter = iDProfe != null ?
                new ObjectParameter("IDProfe", iDProfe) :
                new ObjectParameter("IDProfe", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_EliminarProfe", iDProfeParameter);
        }
    
        public virtual ObjectResult<string> SP_GuardarProfe(string iDProfe, string nombre, string apellidos, string telefono, string cedula, string correo, string genero, Nullable<System.DateTime> fecha_Ingreso, string nivelAcad, string tipoCarga, string iDDepto, string tipoContrato, Nullable<int> cargo, Nullable<int> usuario)
        {
            var iDProfeParameter = iDProfe != null ?
                new ObjectParameter("IDProfe", iDProfe) :
                new ObjectParameter("IDProfe", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var generoParameter = genero != null ?
                new ObjectParameter("Genero", genero) :
                new ObjectParameter("Genero", typeof(string));
    
            var fecha_IngresoParameter = fecha_Ingreso.HasValue ?
                new ObjectParameter("Fecha_Ingreso", fecha_Ingreso) :
                new ObjectParameter("Fecha_Ingreso", typeof(System.DateTime));
    
            var nivelAcadParameter = nivelAcad != null ?
                new ObjectParameter("NivelAcad", nivelAcad) :
                new ObjectParameter("NivelAcad", typeof(string));
    
            var tipoCargaParameter = tipoCarga != null ?
                new ObjectParameter("TipoCarga", tipoCarga) :
                new ObjectParameter("TipoCarga", typeof(string));
    
            var iDDeptoParameter = iDDepto != null ?
                new ObjectParameter("IDDepto", iDDepto) :
                new ObjectParameter("IDDepto", typeof(string));
    
            var tipoContratoParameter = tipoContrato != null ?
                new ObjectParameter("TipoContrato", tipoContrato) :
                new ObjectParameter("TipoContrato", typeof(string));
    
            var cargoParameter = cargo.HasValue ?
                new ObjectParameter("Cargo", cargo) :
                new ObjectParameter("Cargo", typeof(int));
    
            var usuarioParameter = usuario.HasValue ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GuardarProfe", iDProfeParameter, nombreParameter, apellidosParameter, telefonoParameter, cedulaParameter, correoParameter, generoParameter, fecha_IngresoParameter, nivelAcadParameter, tipoCargaParameter, iDDeptoParameter, tipoContratoParameter, cargoParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<string> SP_GuardarSemestre(Nullable<System.DateTime> fechaIni, Nullable<System.DateTime> fechaFin, string nombre, string feriado, string anioAcad)
        {
            var fechaIniParameter = fechaIni.HasValue ?
                new ObjectParameter("FechaIni", fechaIni) :
                new ObjectParameter("FechaIni", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var feriadoParameter = feriado != null ?
                new ObjectParameter("Feriado", feriado) :
                new ObjectParameter("Feriado", typeof(string));
    
            var anioAcadParameter = anioAcad != null ?
                new ObjectParameter("AnioAcad", anioAcad) :
                new ObjectParameter("AnioAcad", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GuardarSemestre", fechaIniParameter, fechaFinParameter, nombreParameter, feriadoParameter, anioAcadParameter);
        }
    
        public virtual ObjectResult<SP_VerCarreras_Result> SP_VerCarreras()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_VerCarreras_Result>("SP_VerCarreras");
        }
    
        public virtual ObjectResult<SP_VerProfe_Result> SP_VerProfe()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_VerProfe_Result>("SP_VerProfe");
        }
    
        public virtual ObjectResult<SP_VerSemestre_Result> SP_VerSemestre()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_VerSemestre_Result>("SP_VerSemestre");
        }
    
        public virtual ObjectResult<Profesor> SP_BuscarProfe1(string iDProfe)
        {
            var iDProfeParameter = iDProfe != null ?
                new ObjectParameter("IDProfe", iDProfe) :
                new ObjectParameter("IDProfe", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Profesor>("SP_BuscarProfe1", iDProfeParameter);
        }
    
        public virtual ObjectResult<Profesor> SP_BuscarProfe1(string iDProfe, MergeOption mergeOption)
        {
            var iDProfeParameter = iDProfe != null ?
                new ObjectParameter("IDProfe", iDProfe) :
                new ObjectParameter("IDProfe", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Profesor>("SP_BuscarProfe1", mergeOption, iDProfeParameter);
        }
    
        public virtual int SP_EliminarProfe1(string iDProfe)
        {
            var iDProfeParameter = iDProfe != null ?
                new ObjectParameter("IDProfe", iDProfe) :
                new ObjectParameter("IDProfe", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EliminarProfe1", iDProfeParameter);
        }
    
        public virtual int SP_GuardarProfe1(string iDProfe, string nombre, string apellidos, string telefono, string cedula, string correo, string genero, Nullable<System.DateTime> fecha_Ingreso, string nivelAcad, string tipoCarga, string iDDepto, string tipoContrato, Nullable<int> cargo, Nullable<int> usuario)
        {
            var iDProfeParameter = iDProfe != null ?
                new ObjectParameter("IDProfe", iDProfe) :
                new ObjectParameter("IDProfe", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var generoParameter = genero != null ?
                new ObjectParameter("Genero", genero) :
                new ObjectParameter("Genero", typeof(string));
    
            var fecha_IngresoParameter = fecha_Ingreso.HasValue ?
                new ObjectParameter("Fecha_Ingreso", fecha_Ingreso) :
                new ObjectParameter("Fecha_Ingreso", typeof(System.DateTime));
    
            var nivelAcadParameter = nivelAcad != null ?
                new ObjectParameter("NivelAcad", nivelAcad) :
                new ObjectParameter("NivelAcad", typeof(string));
    
            var tipoCargaParameter = tipoCarga != null ?
                new ObjectParameter("TipoCarga", tipoCarga) :
                new ObjectParameter("TipoCarga", typeof(string));
    
            var iDDeptoParameter = iDDepto != null ?
                new ObjectParameter("IDDepto", iDDepto) :
                new ObjectParameter("IDDepto", typeof(string));
    
            var tipoContratoParameter = tipoContrato != null ?
                new ObjectParameter("TipoContrato", tipoContrato) :
                new ObjectParameter("TipoContrato", typeof(string));
    
            var cargoParameter = cargo.HasValue ?
                new ObjectParameter("Cargo", cargo) :
                new ObjectParameter("Cargo", typeof(int));
    
            var usuarioParameter = usuario.HasValue ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GuardarProfe1", iDProfeParameter, nombreParameter, apellidosParameter, telefonoParameter, cedulaParameter, correoParameter, generoParameter, fecha_IngresoParameter, nivelAcadParameter, tipoCargaParameter, iDDeptoParameter, tipoContratoParameter, cargoParameter, usuarioParameter);
        }
    
        public virtual int SP_GuardarSemestre1(Nullable<System.DateTime> fechaIni, Nullable<System.DateTime> fechaFin, string nombre, string feriado, string anioAcad)
        {
            var fechaIniParameter = fechaIni.HasValue ?
                new ObjectParameter("FechaIni", fechaIni) :
                new ObjectParameter("FechaIni", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var feriadoParameter = feriado != null ?
                new ObjectParameter("Feriado", feriado) :
                new ObjectParameter("Feriado", typeof(string));
    
            var anioAcadParameter = anioAcad != null ?
                new ObjectParameter("AnioAcad", anioAcad) :
                new ObjectParameter("AnioAcad", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GuardarSemestre1", fechaIniParameter, fechaFinParameter, nombreParameter, feriadoParameter, anioAcadParameter);
        }
    
        public virtual ObjectResult<Carreras> SP_VerCarreras1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Carreras>("SP_VerCarreras1");
        }
    
        public virtual ObjectResult<Carreras> SP_VerCarreras1(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Carreras>("SP_VerCarreras1", mergeOption);
        }
    
        public virtual ObjectResult<Profesor> SP_VerProfe1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Profesor>("SP_VerProfe1");
        }
    
        public virtual ObjectResult<Profesor> SP_VerProfe1(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Profesor>("SP_VerProfe1", mergeOption);
        }
    
        public virtual ObjectResult<Semestre> SP_VerSemestre1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Semestre>("SP_VerSemestre1");
        }
    
        public virtual ObjectResult<Semestre> SP_VerSemestre1(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Semestre>("SP_VerSemestre1", mergeOption);
        }
    }
}
